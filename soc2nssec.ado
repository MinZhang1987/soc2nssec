*! version 1.0 30Aug2017 Min Zhang Stata 13
program define soc2nssec
	version 10.0
	syntax varlist(max=1)[if], GENerate(name) [FLOAT] Version(str) [noLabel]
	* define if
	marksample touse
	quietly count if `touse'
	if `r(N)'==0 {
		error 2000
	}
	* confirm 4-digit
	
	
	* confirm if newvar is taken
	confirm new var `generate' 
	
	* numeric
	capture confirm numeric variable `varlist'
	if _rc==0 {
	
	* recode SOC 90
	if "`version'" == "90" {
		if (`varlist'>=100 & `varlist'<=999) | (`varlist'==.) {
			qui	recode `varlist' (100/102=2) ///
				(103=4.1) (110=2) (111/112=5) (113/126=2) (127/130=7.1) ///
				(131=5) (132=4.1) (139/140=5) (141=12.6) (142=5) (150/155=2) ///
				(160/169=9.2) (170=5) (171=8.1) (172/173=9.1) (174/178=5) ///
				(178=8.1) (179=5) (190=4.1) (191=3.1) (199=5) (200/216=3.1) ///
				(217/218=4.1) (219/221=3.1) (222=4) (223=3.3) (224/230=3.1) ///
				(231=4.1) (232=3.1) (233/235=4.1) (239=9.1) (240=3.1) ///
				(241=3.3) (242/250=3.1) (251=3.2) (252=3.1) (253=3.2) ///
				(260/262=3.1) (270/271=4.1) (290/292=3.1) (293/301=4.1) ///
				(302=7.3) (303/309=4.1) (310=7.3) (311/313=4.1) ///
				(320=3.2) (330=4.1) (331=3.2) (332/344=4.1) (345=7.3) ///
				(346=12.1) (347=4.1) (347=4.1) (348=3.2) (349=12.2) ///
				(350=7.1) (360/361=4.1) (362=3.2) (363=4.1) ///
				(364=3.1) (370=12.7) (371/380=4.1) (381/382=9.1) ///
				(383=7.3) (384/385=4.3) (386=7.3) (387=4.2) ///
				(390/392=4.2) (393=9.1) (394/399=4.1) (400/411=7.1) ///
				(412=7.2) (420/421=7.1) (430=7.2) (440=12.6) ///
				(441=13.4) (450/459=7.1) (460/462=12.6) (463=11.1) ///
				(490=7.1) (491=7.3) (500/502=9.1) (503=13.2) ///
				(504=9.1) (505=12.4) (506/509=9.1) (510/513=12.3) ///
				(514=10) (515/518=11.1) (519=12.3) (520/522=11.1) ///
				(523=7.4) (524/525=11.1) (526/529=7.4) (530=13.3) ///
				(531=12.3) (532=11.1) (533=12.3) (534=13.3) ///
				(535=12.3) (536=9.1) (537=13.3) (540/543=11.1) ///
				(544=12.4) (550/551=13.3) (552/553=13.2) (554/555=13.3) ///
				(556=9.1) (557=12.3) (559=13.3) (560/561=11.1) ///
				(562=13.3) (563/569=11.1) (570=9.1) (571=13.3) ///
				(572=12.3) (573=11.1) (579=9.1) (580=11.1) ///
				(581/591=13.3) (592=7.3) (593=9.1) (594=11.1) ///
				(595=12.5) (596=12.3) (597=13.3) (598=7.4) ///
				(599=7.4) (600/612=7.2) (613=4.1) (614/615=12.2) ///
				(619=13.1) (620=12.2) (621/630=13.1) (631=11.2) ///
				(640/641=7.3) (642=7.2) (643/644=12.2) (650=7.2) ///
				(651/652=12.7) (659/660=13.1) (661=9.1) (670=12.2) ///
				(671=10) (672=12.2) (673=13.2) (690=12.2) ///
				(691=5) (699=12.2) (700=4.1) (701=4.1) ///
				(702=4.2) (703=3.2) (710=4.2) (719=7.2) (720/722=12.1) ///
				(730=9.1) (731=13.3) (732/733=9.1) (790=7.2) ///
				(791=13.1) (792=12.1) (800/809=12.4) (810=11.2) ///
				(811/814=13.2) (820=11.2) (821/824=12.3) (825=12.4) ///
				(826=11.2) (829/839=12.3) (840/851=12.4) (859=13.2) ///
				(860/861=11.2) (862/863=13.2) (864=7.3) (869=11.2) ///
				(870/871=10) (872/873=13.3) (874=9.1) (875=13.3) ///
				(880=12.4) (881/884=11.2) (885=13.3) (886/887=12.3) ///
				(889=13.4) (890=11.2) (891=12.3) (892=11.2) ///
				(893/894=12.4) (895=13.4) (896=10) (897=12.3) ///
				(898=11.2) (899=12.4) (900/901=12.5) (902=13.5) ///
				(903=9.1) (904=9.2) (910=13.3) (911/920=13.4) ///
				(921=9.1) (922=11.2) (923=10) (924=9.1) ///
				(929/934=13.4) (940/950=12.2) (951=13.1) ///
				(952/953=12.2) (954=12.1) (955=13.4) (956=9.1) ///
				(957/990=13.4) (999=13.1) if `touse', gen(`generate')
	
	
			qui recode `generate' ///
			   (1=1) ///
			   (2=1) ///
			   (3.0/3.9=3) ///
			   (4.0/4.9=4) ///
			   (5=5) ///
			   (6=6) ///
			   (7.0/7.9=7) ///
			   (8.0/8.9=8) ///
			   (9.0/9.9=9) ///
			   (10=10) ///
			   (11.0/11.9=11) ///
			   (12.0/12.9=12) ///
			   (13.0/13.9=13) ///
			   (14.0/14.9=14) if `touse'
			   
			qui recode `generate' ///
			     (1/3=1) ///
				 (4/6=2) ///
				 (7=3) ///
				 (8/9=4) ///
				 (10/11=5) ///
				 (12=6) ///
				 (13=7) if `touse'
			di "Seems this was a success"	
		
				* label values 
			   if "`label'"!="nolabel" {
					capture label define  `generate'_nssec7 ///
						1 "Higher Managerial and Professional" ///
						2 "Lower Managerial and Professional" ///
						3 "Intermediate" ///
						4 "Small Employer and Own Account Workers" ///
						5 "Lower Supervisory and Technical" ///
						6 "Semi-Routine" ///
						7 "Routine"
					capture label val `generate'  `generate'_nssec7	
			   			   
	}
	}	
	
	else {
		di "`varlist' is not a 3-digit SOC1990"
		}
		}
	* recode SOC 00
	else if "`version'" == "00" {
			if (`varlist'>=1000 & `varlist'<=9999) | (`varlist'==.) {
					qui recode `varlist' ///
						(1111/1113=2) (1114=5) (1121=2) (1122=5) ///
						(1123/1137=2) (1141/1163=5) (1171/1173=2) ///
						(1174=5) (1181=2) (1182/1183=3) (1184=2) ///
						(1185/1211=5) (1212=2) (1219=9.2) (1221=9.1) ///
						(1222=5) (1223=8.1) (1224/1226=5) (1231=2) ///
						(1232/1234=8.1) (1235/1239=5) (2111/2126=3.1) ///
						(2127/2128=4.1) (2129=3.1) (2131/2132=3.2) ///
						(2211/2213=3.1) (2214=4.1) (2215=3.3) ///
						(2216/2311=3.1) (2312=4.1) (2313=3.1) ///
						(2314/2316=4.1) (2317=3.1) (2319=9.1) ///
						(2321/2421=3.1) (2422=3.2) (2423/2432=3.1) ///
						(2433=4.1) (2434=3.1) (2441/2442=4.1) (2443=3.2) ///
						(2444=3.1) (2451/3111=4.1) (3112=7.3)  ///
						(3113/3114=4.1) (3115=11.1) (3119/3121=4.1) ///
						(3122=7.3) (3123/3212=4.1) (3213=6) (3214/3215=4.1) ///
						(3216=7.3) (3217=12.1) (3218=7.3) (3221/3222=4.1) ///
						(3223=3.2) (3229=4.3) (3231/3232=4.1) (3311/3314=7.2) ///
						(3319=4.1) (3411/3416=4.3) (3421=7.3) (3422=9.1) ///
						(3431/3433=4.1) (3434=7.2) (3441/3442=4.1) ///
						(3443=12.2) (3449=7.2) (3511=4.1) (3512=3.2) (3513=4.1) ///
						(3514=11.1) (3520=7.1) (3531=4.1) (3532/3533=3.2) ///
						(3534=4.1) (3535=3.2) (3536/3537=4.2) ///
						(3539/3541=4.1) (3542=4.2) (3543/3544=4.1) ///
						(3551=3.1) (3552=7.2) (3561/3567=4.1) ///
						(3568=3.2) (4111=4.1) (4112/4113=7.1) ///
						(4114=4.1) (4121/4132=7.1) (4133=12.6) ///
						(4134/4136=7.1) (4137/4141=12.6) (4142=11.1) ///
						(4150=7.2) (4211/4215=7.1) (4216=12.6) ///
						(4217=7.1) (5111=9.2) (5112=12.5) ///
						(5113=11.1) (5119=9.2) (5211=13.3) ///
						(5212/5213=12.3) (5214/5216=13.3) (5221=12.3) ///
						(5222/5233=11.1) (5234=12.3) (5241=11.1) ///
						(5242=7.4) (5243/5244=11.1) (5245/5249=7.4) ///
						(5311=12.3) (5312/5313=9.1) (5314=11.1) ///
						(5315/5323=9.1) (5411/5413=13.3) (5414=12.3) ///
						(5419=13.3) (5421/5422=11.1) (5423=13.3) ///
						(5423=13.3) (5424=11.1) (5431=13.3) ///
						(5432=11.1) (5433=13.3) (5434=12.2) ///
						(5491/5492=13.3) (5493=11.1) (5494=9.1) ///
						(5495=11.1) (5496=13.1) (5499=11.1) (6111=7.3) ///
						(6112=7.2) (6113=12.2) (6114=12.7) ///
						(6115=12.2) (6121=7.2) (6122=9.1) ///
						(6123/6124=12.7) (6131=12.2) (6139=13.5) ///
						(6211=12.2) (6212=7.2) (6213=13.1) ///
						(6214/6215=7.2) (6219=13.3) (6221=13.1) ///
						(6222=9.2) (6231/6292=12.2) (7111/7121=12.1) ///
						(7122=7.2) (7123=13.3) (7124=9.1) ///
						(7125/7212=7.2) (8111=12.4) (8112=12.3) ///
						(8113=13.2) (8114=11.2) (8115=12.3) ///
						(8116=12.4) (8117/8118=12.3) (8119=12.4) ///
						(8121=12.3) (8122=13.3) (8123=11.2) ///
						(8124/8125=12.4) (8126=11.2) (8129/8132=12.4) ///
						(8133=11.2) (8134=13.2) (8134=12.4) (8135=12.4) ///
						(8136=12.3) (8137=13.2) (8138=7.3) ///
						(8139=13.2) (8141=12.4) (8142=10) ///
						(8143=11.2) (8149=10) (8211/8213=13.3) ///
						(8214/8215=9.1) (8216=11.2) (8217=12.4) ///
						(8218=11.2) (8219=10) (8221/8222=12.3) ///
						(8223=12.5) (8229=13.3) (9111=12.5) ///
						(9112=9.2) (9119=13.5) (9121/9132=13.4) ///
						(9133=12.3) (9134=13.2) (9139/9149=13.4) ///
						(9211=12.2) (9219=12.6) (9221=12.2) ///
						(9222=13.1) (9223=12.2) (9224/9229=13.1) ///
						(9231=9.1) (9232/9233=13.4) (9234=13.2) ///
						(9235/9239=13.4) (9241/9242=12.2) (9243/9244=13.1) ///
						(9245=13.4) (9249=12.2) (9251/9259=12.1) ///
						if `touse', gen(`generate') 
				
					qui recode `generate' ///
						(1=1) ///
						(2=1) ///
						(3.0/3.9=3) ///
						(4.0/4.9=4) ///
						(5=5) ///
						(6=6) ///
						(7.0/7.9=7) ///
						(8.0/8.9=8) ///
						(9.0/9.9=9) ///
						(10=10) ///
						(11.0/11.9=11) ///
						(12.0/12.9=12) ///
						(13.0/13.9=13) ///
						(14.0/14.9=14) if `touse'
			   
					qui recode `generate' ///
						(1/3=1) ///
						(4/6=2) ///
						(7=3) ///
						(8/9=4) ///
						(10/11=5) ///
						(12=6) ///
						(13=7) if `touse'
					di "Seems this was a success"
 
				* label values 
				if "`label'"!="nolabel" {
					capture label define  `generate'_nssec7 ///
							1 "Higher Managerial and Professional" ///
							2 "Lower Managerial and Professional" ///
							3 "Intermediate" ///
							4 "Small Employer and Own Account Workers" ///
							5 "Lower Supervisory and Technical" ///
							6 "Semi-Routine" ///
							7 "Routine"
					capture label val `generate'  `generate'_nssec7			
	}				
	}
	
		else {
			di "`varlist' is not a 4-digit SOC2000"
		}
		}
	* recode SOC 10
	else if "`version'" == "10" {
			if (`varlist'>=1000 & `varlist'<=9999) | (`varlist'==.) {
				qui recode `varlist' ///
					(1115/1121=1.1)  (1122=2) (1123/1135=1.1) ///
					(1136/1162=2)  (1171/1184=1.1)  (1190=1.1) (1211/1224=4) ////
					(1225/1242=2)  (1251=1.1) (1252/1254=4) (1255/1259=2) ///
					(2111/2126=1.2)  (2127=2) (2129/2136=1.2) (2137/2141=2) ///
					(2142/2216=1.2) (2217/2222=2) (2223=1.2) (2229/2232=2) ///
					(2311=1.2) (2312/2316=2) (2317/2318=1.2) (2319=3)  ///
					(2412/2426=1.2) (2429=2) (2431/2432=1.2) (2433=2) (2434=1.2) ///
					(2435/2442=2) (2443/2444=1.2)  (2449/2462=2)  (2463=1.2) ///
					(2471/3111=2) (3112=3) (3113/3114=2) (3115=5) (3116/3121=2) ///
					(3122=3) (3131/3132=2) (3213/3218=3) (3219/3239=2)  ///
					(3311/3314=3) (3315=6) (3319/3416=2) (3417=4) (3421=3) ///
					(3422=4) (3441/3442=2) (3443=6) (3511=2) (3512=1.2) ///
					(3513=2) (3520=3) (3531=2) (3532/3533=1.2) (3534=2) ///
					(3535=1.2) (3536/3544=2) (3545=1.2) (3546=2) (3550=3) ///
					(3561/3567=2) ///
					(4112/4113=3) (4114=2) (4121/4123=3) (4124=2) (4129/4132=3) ///
					(4133=6) (4134/4159=3)  (4161/4162=2) (4211/4215=3) ///
					(4216=6) (4217=3)  ///
					(5111=4) (5112=6) (5113=4) (5114=5) (5119=4) (5211=7) ///
					(5212/5213=6) (5214/5216=7) (5221=6) (5222/5224=5) ///
					(5225=6) (5231/5232=5) (5234=6) (5235=5) (5236=7) ///
					(5237/5241=5) (5242=3) (5244=5) (5245/5249=3) (5250=2) ///
					(5311=6) (5312/5313=4)  (5314=5)  (5315=4) (5316=7) ///
					(5319/5323=4) (5330=5) ///
					(5411/5413=7) (5414=6) (5419=7) (5421/5422=5) (5423/5431=7) ///
					(5432=5) (5433=7) (5434=5) (5435=6) (5436=2)  (5441/5443=7) ///
					(5449=5) ///
					(6121=3) (6122=4) (6123=6) (6125=3) (6126/6132=6) (6139=7) ///
					(6141/6142=3) (6143/6145=6) (6146=5) (6147=7) (6148/6211=6) ///
					(6212/6215=3) (6219=6) (6221=7) (6222/6232=6) (6240=5) ///
					(7111/7114=6) (7115=3) (7121=6) (7122=3) (7123=7) (7124=4) ///
					(7125/7129=3) (7130=2) (7211=3) (7213=6) (7214=5) (7215=6) ///
					(7219=3) (7220=2) ///
					(8111/8112=6) (8113=7) (8114=5) (8115/8121=6) (8122=7) ///
					(8123=5) (8124/8125=6) (8126=5) (8127/8132=6) (8133=5) ///
					(8134=7) (8135=6) (8137/8139=7) (8141/8142=6) (8143=5) ///
					(8149/8213=7) (8214/8215=4) (8221/8223=6) (8229=7) (8231=5) ///
					(8232=6) (8233/8239=5) ///
					(9111/9112=6) (9119/9139=7) (9211/9219=6) (9231=4) ///
					(9232/9239=7) (9241=6) (9242/9244=7) (9249/9259=6) ///
					(9260=7) (9271/9272=6) (9273/9279=7)  ///
					if `touse', gen(`generate')
				qui recode `generate' (1.1/1.2=1)
			
				di "Seems this was a success"

			* label values 
			   if "`label'"!="nolabel" {
					capture label define  `generate'_nssec7 ///
						1 "Higher Managerial and Professional" ///
						2 "Lower Managerial and Professional" ///
						3 "Intermediate" ///
						4 "Small Employer and Own Account Workers" ///
						5 "Lower Supervisory and Technical" ///
						6 "Semi-Routine" ///
						7 "Routine"
					capture label val `generate'  `generate'_nssec7	
			
	}
	}
		else  {
			di "`varlist' is not a 4-digit SOC2010"
	}
	}
	else {
		di "No such SOC available"
	}
	}
	else {
		di "`varlist' is not a numeric variable and cannot be recoded."
		}	
end

 

 
